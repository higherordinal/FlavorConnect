RewriteEngine On

# Bluehost-specific configuration
# No need for BASE_PATH detection as we're using absolute paths

# Exclude existing files and directories from rewriting
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d

# Direct file access - no router implementation
# URLs will be handled by their corresponding PHP files directly

# Handle 404 errors with a rewrite rule optimized for Bluehost
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule .* /404.php [L]

# Fallback ErrorDocument directive
ErrorDocument 404 /404.php

# Prevent directory listing
Options -Indexes

# Protect sensitive files
<FilesMatch "^\.">
    Order allow,deny
    Deny from all
</FilesMatch>

# Special rules for API endpoints
<FilesMatch "^\/api\/.*\.php$">
    # Allow CORS for API endpoints
    Header set Access-Control-Allow-Origin "*"
    Header set Access-Control-Allow-Methods "GET, POST, OPTIONS"
    Header set Access-Control-Allow-Headers "Content-Type, X-Requested-With"
    
    # Ensure Referer information is passed
    Header unset Referrer-Policy
    
    # Disable caching for API responses
    Header set Cache-Control "no-store, no-cache, must-revalidate, max-age=0"
    Header set Pragma "no-cache"
    Header set Expires "0"
</FilesMatch>

# Security headers
<IfModule mod_headers.c>
    # Basic security headers
    Header set X-Content-Type-Options "nosniff"
    Header set X-Frame-Options "SAMEORIGIN"
    Header set X-XSS-Protection "1; mode=block"
    
    # Exclude API directory from some security headers
    <FilesMatch "^(?!.*\/api\/).*$">
        # Content Security Policy (CSP) to prevent XSS attacks - not applied to API directory
        Header set Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' https://cdnjs.cloudflare.com https://www.youtube.com https://www.youtube-nocookie.com https://s.ytimg.com https://*.doubleclick.net https://*.googlesyndication.com https://*.google-analytics.com; style-src 'self' 'unsafe-inline' https://cdnjs.cloudflare.com https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com https://cdnjs.cloudflare.com; img-src 'self' data: blob: https:; connect-src 'self' https://*.doubleclick.net https://*.google-analytics.com; frame-src https://www.youtube.com https://youtube.com https://www.youtube-nocookie.com https://*.doubleclick.net; frame-ancestors 'self'; form-action 'self'; base-uri 'self'; object-src 'none'"
    </FilesMatch>
    
    # HTTP Strict Transport Security (HSTS)
    Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
    
    # Cross-Origin Opener Policy (COOP) for origin isolation - relaxed for API
    <FilesMatch "^(?!.*\/api\/).*$">
        Header always set Cross-Origin-Opener-Policy "same-origin"
    </FilesMatch>
    
    # Additional cross-origin policies for better security
    # Using cross-origin to allow YouTube embeds
    Header always set Cross-Origin-Resource-Policy "cross-origin"
    # Using unsafe-none to allow YouTube embeds without restrictions
    Header always set Cross-Origin-Embedder-Policy "unsafe-none"
    
    # Referrer Policy - more permissive for API endpoints
    <FilesMatch "^(?!.*\/api\/).*$">
        Header always set Referrer-Policy "strict-origin-when-cross-origin"
    </FilesMatch>
    <FilesMatch "^\/api\/.*\.php$">
        Header always set Referrer-Policy "no-referrer-when-downgrade"
    </FilesMatch>
    
    # Permissions Policy (formerly Feature Policy)
    Header always set Permissions-Policy "camera=(), microphone=(), geolocation=(), interest-cohort=()"
</IfModule>

# Enable GZIP compression
<IfModule mod_deflate.c>
    AddOutputFilterByType DEFLATE text/html text/plain text/xml text/css text/javascript application/javascript application/x-javascript application/xml
</IfModule>

# Set default character set
AddDefaultCharset UTF-8

# Set correct MIME type for JavaScript modules
<IfModule mod_mime.c>
    AddType application/javascript .js
    AddType application/javascript .mjs
</IfModule>

# Cache control for static assets
<IfModule mod_expires.c>
    ExpiresActive On
    ExpiresByType image/jpg "access plus 1 year"
    ExpiresByType image/jpeg "access plus 1 year"
    ExpiresByType image/gif "access plus 1 year"
    ExpiresByType image/png "access plus 1 year"
    ExpiresByType image/webp "access plus 1 year"
    ExpiresByType text/css "access plus 1 month"
    ExpiresByType application/javascript "access plus 1 month"
    ExpiresByType text/javascript "access plus 1 month"
    ExpiresByType application/pdf "access plus 1 month"
    ExpiresByType text/x-javascript "access plus 1 month"
</IfModule>
